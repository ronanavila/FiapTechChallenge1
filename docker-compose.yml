name: 'tech-challenge'

services:
  ms-sql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    hostname: sqlserver
    environment:
      SA_PASSWORD: "1q2w3e4r@#@"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    ports:
      - "1433:1433"
      
  mssqltools:
    image: mcr.microsoft.com/mssql-tools
    container_name: mssqltools
    depends_on:
      ms-sql:
        condition: service_started   
    volumes:
      - ./sql/database.sql:/tmp/database.sql
      - ./sql/create.sql:/tmp/create.sql
      - ./sql/insert.sql:/tmp/insert.sql
      - ./healthy.sql:/tmp/healthy.sql
      - ./sql/script.sh:/tmp/script.sh
    command: /bin/bash ./tmp/script.sh

  api: 
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: techchallenge.api
    environment:
        ASPNETCORE_ENVIRONMENT: Development
        ConnectionStrings__DefaultConnection: Server=ms-sql,1433;Database=TechChallenge;User ID=sa;Password=1q2w3e4r@#\$;Trusted_Connection=False; TrustServerCertificate=True;
    depends_on:
      ms-sql:
        condition: service_started  
    ports:
      - "8080:8080"  

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.54.1
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: grafana/grafana:11.2.0 
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-batman}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-batman}
      - DS_PROMETHEUS=${DS_PROMETHEUS:-c226b139-d9c1-429c-9984-559dd1c95216}
      # - GF_AUTH_ANONYMOUS_ENABLED=true
      # - GF_AUTH_ANONYMOUS_ORG_ROLE=Editor
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning/datasources/default.yaml:/etc/grafana/provisioning/datasources/default.yaml
      - ./grafana/provisioning/dashboards/default.yaml:/etc/grafana/provisioning/dashboards/default.yaml
    ports:
      - 3000:3000