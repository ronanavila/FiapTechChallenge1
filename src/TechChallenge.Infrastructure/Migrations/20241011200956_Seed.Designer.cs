// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechChallenge.Infrastructure.Repository.ApplicationDbContext;

#nullable disable

namespace TechChallenge.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241011200956_Seed")]
    partial class Seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechChallenge.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.Property<int>("RegionDDD")
                        .HasColumnType("INT");

                    b.HasKey("Guid");

                    b.HasIndex("RegionDDD");

                    b.ToTable("Contact", (string)null);

                    b.HasData(
                        new
                        {
                            Guid = new Guid("18cbd524-dae3-4655-8bbe-168ddb1460e7"),
                            Email = "joao@gmail.com",
                            Name = "Joao",
                            Phone = "999988888",
                            RegionDDD = 12
                        },
                        new
                        {
                            Guid = new Guid("2f2be063-3b12-41ab-b0b1-1ad8f2a0609e"),
                            Email = "pedro@gmail.com",
                            Name = "Pedro",
                            Phone = "999977778",
                            RegionDDD = 19
                        },
                        new
                        {
                            Guid = new Guid("6f107b50-e7c6-43ab-b88f-211895f6e4f8"),
                            Email = "paulo@gmail.com",
                            Name = "Paulo",
                            Phone = "321456888",
                            RegionDDD = 11
                        });
                });

            modelBuilder.Entity("TechChallenge.Domain.Entities.Region", b =>
                {
                    b.Property<int>("DDD")
                        .HasColumnType("INT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("DDD");

                    b.ToTable("Region", (string)null);

                    b.HasData(
                        new
                        {
                            DDD = 12,
                            Location = "Rio Preto"
                        },
                        new
                        {
                            DDD = 19,
                            Location = "Campinas"
                        },
                        new
                        {
                            DDD = 11,
                            Location = "São Paulo"
                        });
                });

            modelBuilder.Entity("TechChallenge.Domain.Entities.Contact", b =>
                {
                    b.HasOne("TechChallenge.Domain.Entities.Region", "Region")
                        .WithMany("Contacts")
                        .HasForeignKey("RegionDDD")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Contact_Region");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("TechChallenge.Domain.Entities.Region", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
