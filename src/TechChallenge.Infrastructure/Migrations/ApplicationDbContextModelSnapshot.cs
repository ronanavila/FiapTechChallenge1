// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechChallenge.Infrastructure.Repository.ApplicationDbContext;

#nullable disable

namespace TechChallenge.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechChallenge.Domain.Entities.Contact", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("UNIQUEIDENTIFIER");

                    b.Property<int>("DDD")
                        .HasColumnType("INT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("VARCHAR(10)");

                    b.HasKey("Guid");

                    b.HasIndex(new[] { "DDD" }, "IX_Contact_DDD");

                    b.ToTable("Contact", (string)null);
                });

            modelBuilder.Entity("TechChallenge.Domain.Entities.Region", b =>
                {
                    b.Property<int>("DDD")
                        .HasColumnType("INT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("DDD");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("TechChallenge.Domain.Entities.Contact", b =>
                {
                    b.HasOne("TechChallenge.Domain.Entities.Region", null)
                        .WithMany()
                        .HasForeignKey("DDD")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
